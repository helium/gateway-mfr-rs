on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: ["v*"]

name: ci

jobs:
  build:
    name: hygiene
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install dependencies
        run: sudo apt-get install -y libtss2-dev

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Check formatting
        run: cargo fmt  -- --check

      - name: Clippy
        run: cargo clippy --all-features -- -Dclippy::all -D warnings

  package:
    name: package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - arm-unknown-linux-gnueabihf
          - armv5te-unknown-linux-musleabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - mips-unknown-linux-musl
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-musl
          - x86_64-unknown-linux-gnu
        feature:
          - ecc608
        include:
          - target: x86_64-unknown-linux-gnu
            feature: tpm
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        if: matrix.feature == 'tpm'
        run: sudo apt-get install -y libtss2-dev llvm-dev libclang-dev clang

      - name: install cross
        if: matrix.feature != 'tpm'
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        env:
          ## Allow cross install into PATH
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo: rust-embedded/cross

      - name: build target (native)
        if: matrix.feature == 'tpm'
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --target ${{ matrix.target }} --features ${{ matrix.feature }} --release

      - name: build target (cross)
        if: matrix.feature != 'tpm'
        run: cross build --target ${{ matrix.target }} --features ${{ matrix.feature }} --release

      - name: name release
        if: startsWith(github.ref, 'refs/tags')
        id: vars
        run: echo "NAME=gateway-mfr-${GITHUB_REF#refs/*/}-${{ matrix.target }}-${{ matrix.feature }}" >> $GITHUB_ENV

      - name: prepare release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NAME: ${{ env.NAME }}
        run: |
          tar -zcv -C target/${{ matrix.target }}/release -f $NAME.tar.gz gateway_mfr
          sha256sum -b --tag $NAME.tar.gz > $NAME.checksum
      - name: push release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fail_on_unmatched_files: true
          files: |
            ${{ env.NAME }}.tar.gz
            ${{ env.NAME }}.checksum
